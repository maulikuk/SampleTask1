{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/api.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction AdduserComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.error);\n  }\n}\nfunction AdduserComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"First name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let AdduserComponent = /*#__PURE__*/(() => {\n  class AdduserComponent {\n    constructor(apiService, formBuilder, router) {\n      this.apiService = apiService;\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.error = '';\n      this.userForm = this.formBuilder.group({\n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        email: ['', Validators.required, Validators.email],\n        address: [''],\n        postCode: ['', Validators.required],\n        country: ['', Validators.required]\n      });\n    }\n    onSubmit() {\n      console.log('on submit click' + this.userForm.valid);\n      debugger;\n      if (this.userForm.valid) {\n        console.log('Form submitted:', this.userForm.value);\n        const formData = this.userForm.value;\n        // Call the API service to make the POST request\n        this.apiService.postUser(formData).subscribe(response => {\n          console.log('API Response:', response);\n          this.router.navigate(['']);\n        }, error => {\n          console.error('API Error:', error);\n          this.error = error;\n        });\n      } else {\n        // Mark form controls as touched to display validation errors\n        this.markFormGroupTouched(this.userForm);\n        alert('Validation fail.');\n      }\n    }\n    markFormGroupTouched(formGroup) {\n      Object.values(formGroup.controls).forEach(control => {\n        if (control instanceof FormGroup) {\n          this.markFormGroupTouched(control);\n        } else {\n          control.markAsTouched();\n        }\n      });\n    }\n    onCancel() {\n      console.log('on cancel click');\n      this.router.navigate(['']);\n    }\n  }\n  AdduserComponent.ɵfac = function AdduserComponent_Factory(t) {\n    return new (t || AdduserComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  AdduserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdduserComponent,\n    selectors: [[\"app-adduser\"]],\n    decls: 38,\n    vars: 3,\n    consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"firstName\"], [\"id\", \"firstName\", \"type\", \"text\", \"formControlName\", \"firstName\", \"maxlength\", \"30\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"lastName\"], [\"id\", \"lastName\", \"type\", \"text\", \"formControlName\", \"lastName\", \"maxlength\", \"30\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"text\", \"formControlName\", \"email\", \"maxlength\", \"100\"], [\"for\", \"address\"], [\"id\", \"address\", \"type\", \"text\", \"formControlName\", \"address\", \"maxlength\", \"100\"], [\"for\", \"postCode\"], [\"id\", \"postCode\", \"type\", \"text\", \"formControlName\", \"postCode\", \"maxlength\", \"15\"], [\"for\", \"country\"], [\"id\", \"country\", \"type\", \"text\", \"formControlName\", \"country\", \"maxlength\", \"20\"], [\"type\", \"submit\", 1, \"button\", 3, \"click\"], [1, \"button\", 3, \"click\"]],\n    template: function AdduserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \"User Data\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"p\");\n        i0.ɵɵtext(3, \"This component demonstrates adding data to the server.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, AdduserComponent_div_4_Template, 2, 1, \"div\", 1);\n        i0.ɵɵelementStart(5, \"div\")(6, \"form\", 2)(7, \"div\", 3)(8, \"label\", 4);\n        i0.ɵɵtext(9, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 5);\n        i0.ɵɵelementStart(11, \"p\");\n        i0.ɵɵtemplate(12, AdduserComponent_span_12_Template, 2, 0, \"span\", 1);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\", 6);\n        i0.ɵɵtext(15, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 3)(18, \"label\", 8);\n        i0.ɵɵtext(19, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 3)(22, \"label\", 10);\n        i0.ɵɵtext(23, \"Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 3)(26, \"label\", 12);\n        i0.ɵɵtext(27, \"PostCode\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 3)(30, \"label\", 14);\n        i0.ɵɵtext(31, \"Country\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"input\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 3)(34, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function AdduserComponent_Template_button_click_34_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(35, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function AdduserComponent_Template_button_click_36_listener() {\n          return ctx.onCancel();\n        });\n        i0.ɵɵtext(37, \"Cancel\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && (ctx.userForm.controls.firstName.errors == null ? null : ctx.userForm.controls.firstName.errors.required));\n      }\n    },\n    dependencies: [i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.MaxLengthValidator, i2.FormGroupDirective, i2.FormControlName]\n  });\n  return AdduserComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}