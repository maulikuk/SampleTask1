{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.apiUrl = '';\n    this.apiUrl = baseUrl + \"user\";\n    console.log(this.apiUrl);\n  }\n  getUsers() {\n    return this.http.get(this.apiUrl);\n  }\n  postUser(data) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.http.post(this.apiUrl, data, {\n      headers\n    });\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAQ9D,OAAM,MAAOC,UAAU;EAGrBC,YAAoBC,IAAgB,EAAsBC,OAAe;IAArD,SAAI,GAAJD,IAAI;IAFhB,WAAM,GAAW,EAAE;IAGzB,IAAI,CAACE,MAAM,GAAGD,OAAO,GAAG,MAAM;IAC9BE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,MAAM,CAAC;EAC1B;EAEAG,QAAQ;IACN,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAS,IAAI,CAACJ,MAAM,CAAC;EAC3C;EAEAK,QAAQ,CAACC,IAAU;IACjB,MAAMC,OAAO,GAAG,IAAIZ,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAE,CAAC;IACvE,OAAO,IAAI,CAACG,IAAI,CAACU,IAAI,CAAM,IAAI,CAACR,MAAM,EAAEM,IAAI,EAAE;MAAEC;IAAO,CAAE,CAAC;EAC5D;;AAfWX,UAAU;mBAAVA,UAAU,0CAGyB,UAAU;AAAA;AAH7CA,UAAU;SAAVA,UAAU;EAAAa,SAAVb,UAAU;EAAAc,YAHT;AAAM","names":["HttpHeaders","ApiService","constructor","http","baseUrl","apiUrl","console","log","getUsers","get","postUser","data","headers","post","factory","providedIn"],"sourceRoot":"","sources":["D:\\Projects\\WebAppMongoDB\\WebAppMongoDB\\ClientApp\\src\\app\\service\\api.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiService {\n  private apiUrl: string = '';\n\n  constructor(private http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\n    this.apiUrl = baseUrl + \"user\";\n    console.log(this.apiUrl);\n  }\n\n  getUsers(): Observable<User[]> {\n    return this.http.get<User[]>(this.apiUrl);\n  }\n\n  postUser(data: User): Observable<any> {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.post<any>(this.apiUrl, data, { headers });\n  }\n}\n\nexport interface User {\n  firstName: string;\n  lastName: string;\n  email: string;\n  address: string;\n  postCode: string;\n  country: string;\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}