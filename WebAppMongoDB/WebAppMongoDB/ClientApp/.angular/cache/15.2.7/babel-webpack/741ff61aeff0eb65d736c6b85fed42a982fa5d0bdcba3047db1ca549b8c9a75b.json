{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/api.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction AdduserComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.error);\n  }\n}\nexport class AdduserComponent {\n  constructor(apiService, formBuilder, router) {\n    this.apiService = apiService;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.error = '';\n    this.userForm = this.formBuilder.group({\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      email: ['', Validators.required, Validators.email],\n      address: [''],\n      postcode: ['', Validators.required],\n      country: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    console.log('on submit click' + this.userForm.valid);\n    debugger;\n    if (this.userForm.valid) {\n      console.log('Form submitted:', this.userForm.value);\n      const formData = this.userForm.value;\n      // Call the API service to make the POST request\n      this.apiService.postUser(formData).subscribe(response => {\n        console.log('API Response:', response);\n        this.router.navigate(['']);\n      }, error => {\n        console.error('API Error:', error);\n        this.error = error;\n      });\n    } else {\n      // Mark form controls as touched to display validation errors\n      this.markFormGroupTouched(this.userForm);\n      alert('Validation fail.');\n    }\n  }\n  markFormGroupTouched(formGroup) {\n    Object.values(formGroup.controls).forEach(control => {\n      if (control instanceof FormGroup) {\n        this.markFormGroupTouched(control);\n      } else {\n        control.markAsTouched();\n      }\n    });\n  }\n  onCancel() {\n    console.log('on cancel click');\n    this.router.navigate(['']);\n  }\n}\nAdduserComponent.ɵfac = function AdduserComponent_Factory(t) {\n  return new (t || AdduserComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n};\nAdduserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdduserComponent,\n  selectors: [[\"app-adduser\"]],\n  decls: 36,\n  vars: 2,\n  consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"firstname\"], [\"id\", \"firstname\", \"type\", \"text\", \"formControlName\", \"firstname\", \"maxlength\", \"30\"], [\"for\", \"lastname\"], [\"id\", \"lastname\", \"type\", \"text\", \"formControlName\", \"lastname\", \"maxlength\", \"30\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"text\", \"formControlName\", \"email\", \"maxlength\", \"100\"], [\"for\", \"address\"], [\"id\", \"address\", \"type\", \"text\", \"formControlName\", \"address\", \"maxlength\", \"100\"], [\"for\", \"postcode\"], [\"id\", \"postcode\", \"type\", \"text\", \"formControlName\", \"postcode\", \"maxlength\", \"15\"], [\"for\", \"country\"], [\"id\", \"country\", \"type\", \"text\", \"formControlName\", \"country\", \"maxlength\", \"20\"], [\"type\", \"submit\", 1, \"button\", 3, \"click\"], [1, \"button\", 3, \"click\"]],\n  template: function AdduserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"User Data\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"This component demonstrates adding data to the server.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, AdduserComponent_div_4_Template, 2, 1, \"div\", 1);\n      i0.ɵɵelementStart(5, \"div\")(6, \"form\", 2)(7, \"div\", 3)(8, \"label\", 4);\n      i0.ɵɵtext(9, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\", 6);\n      i0.ɵɵtext(13, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 3)(16, \"label\", 8);\n      i0.ɵɵtext(17, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 3)(20, \"label\", 10);\n      i0.ɵɵtext(21, \"Address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 3)(24, \"label\", 12);\n      i0.ɵɵtext(25, \"PostCode\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 3)(28, \"label\", 14);\n      i0.ɵɵtext(29, \"Country\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"input\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"div\", 3)(32, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function AdduserComponent_Template_button_click_32_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(33, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function AdduserComponent_Template_button_click_34_listener() {\n        return ctx.onCancel();\n      });\n      i0.ɵɵtext(35, \"Cancel\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.error);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n    }\n  },\n  dependencies: [i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.MaxLengthValidator, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","Validators","i0","AdduserComponent","constructor","apiService","formBuilder","router","userForm","group","firstname","required","lastname","email","address","postcode","country","onSubmit","console","log","valid","value","formData","postUser","subscribe","response","navigate","error","markFormGroupTouched","alert","formGroup","Object","values","controls","forEach","control","markAsTouched","onCancel","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Projects\\WebAppMongoDB\\WebAppMongoDB\\ClientApp\\src\\app\\user\\adduser\\adduser.component.ts","D:\\Projects\\WebAppMongoDB\\WebAppMongoDB\\ClientApp\\src\\app\\user\\adduser\\adduser.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/service/api.service';\n\n@Component({\n  selector: 'app-adduser',\n  templateUrl: './adduser.component.html',\n  styleUrls: ['./adduser.component.css']\n})\nexport class AdduserComponent {\n  error: string='';\n  userForm: FormGroup;\n\n  constructor(private apiService: ApiService, private formBuilder: FormBuilder, private router: Router) { \n    this.userForm = this.formBuilder.group({\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n      email: ['', Validators.required, Validators.email],\n      address: [''],\n      postcode: ['', Validators.required],\n      country: ['', Validators.required]\n    });\n  }\n\n  onSubmit(): void {\n    console.log('on submit click' + this.userForm.valid);\n    debugger;\n    if (this.userForm.valid) {\n      console.log('Form submitted:', this.userForm.value);\n      const formData = this.userForm.value;\n\n      // Call the API service to make the POST request\n      this.apiService.postUser(formData).subscribe(\n        (response) => {\n          console.log('API Response:', response);\n          this.router.navigate(['']);\n        },\n        (error) => {\n          console.error('API Error:', error);\n          this.error =error; \n        }\n      );\n    } else {\n      // Mark form controls as touched to display validation errors\n      this.markFormGroupTouched(this.userForm);\n      alert('Validation fail.');\n    }\n  }\n\n  private markFormGroupTouched(formGroup: FormGroup) {\n    Object.values(formGroup.controls).forEach((control) => {\n      if (control instanceof FormGroup) {\n        this.markFormGroupTouched(control);\n      } else {\n        control.markAsTouched();\n      }\n    });\n  }\n  \n  onCancel(): void {\n    console.log('on cancel click');\n    this.router.navigate(['']);\n  }\n}\n\n","<h1 id=\"tableLabel\">User Data</h1>\n\n<p>This component demonstrates adding data to the server.</p>\n\n<div *ngIf=\"error\">{{ error }}</div>\n\n<div>\n    <form [formGroup]=\"userForm\">\n        <div class=\"form-group\">\n            <label for=\"firstname\">First Name</label>\n            <input id=\"firstname\" type=\"text\" formControlName=\"firstname\" maxlength=\"30\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"lastname\">Last Name</label>\n            <input id=\"lastname\" type=\"text\" formControlName=\"lastname\" maxlength=\"30\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input id=\"email\" type=\"text\" formControlName=\"email\" maxlength=\"100\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"address\">Address</label>\n            <input id=\"address\" type=\"text\" formControlName=\"address\" maxlength=\"100\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"postcode\">PostCode</label>\n            <input id=\"postcode\" type=\"text\" formControlName=\"postcode\" maxlength=\"15\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"country\">Country</label>\n            <input id=\"country\" type=\"text\" formControlName=\"country\" maxlength=\"20\">\n        </div>\n        <div class=\"form-group\">\n            <button type=\"submit\" class=\"button\" (click)=\"onSubmit()\">Submit</button>\n            <button class=\"button\" (click)=\"onCancel()\">Cancel</button>\n        </div>\n    </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}